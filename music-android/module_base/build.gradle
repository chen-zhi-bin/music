//if (rootProject.ext.isModule){
    apply plugin: 'com.android.library'
//}else {
//    apply plugin:  'com.android.application'
//}
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

kapt{
    arguments{
        arg("AROUTER_MODULE_NAME",project.getName())
    }
}
android {
    resourcePrefix "base_"
    sourceSets {
        main {
            if (rootProject.ext.isModule) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                java {
                    //排除java/module文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }

    buildFeatures{
        viewBinding = true
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion "30.0.3"

    defaultConfig {
//        if (!rootProject.ext.isModule) {
//            applicationId "com.chen.module_base"
//        }
        minSdkVersion  rootProject.ext.android.minSdkVersion
        targetSdkVersion  rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName  rootProject.ext.android.versionName


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
//                includeCompileClasspath = true

            }
        }
        buildConfigField "String" , "VERSION_TYPE","\"VERSION_STATUS_RELEASE\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
//    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.material
    implementation rootProject.ext.dependencies.constraintLayout

    api rootProject.ext.dependencies.arouter
    kapt rootProject.ext.dependencies.arouterCompiler
//    api rootProject.ext.dependencies.arouter
//    annotationProcessor rootProject.ext.dependencies.arouterCompiler
//    implementation 'com.alibaba:arouter-api:1.5.2'

    implementation rootProject.ext.dependencies.loadsir
    implementation rootProject.ext.dependencies.toast

    implementation'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
    implementation 'com.tencent:mmkv:1.2.11'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation rootProject.ext.dependencies.glide
    annotationProcessor rootProject.ext.dependencies.glide_compiler
    kapt 'com.google.auto.service:auto-service:1.0-rc6'
    api 'com.google.auto.service:auto-service:1.0-rc6'


}